{"version":3,"sources":["components/ContactForm/ContactsForm.module.css","components/ContactsList/ContactsList.module.css","App.module.css","components/ContactsFilter/ContactsFilter.module.css","components/Modal/Modal.module.css","redux/action.js","redux/operations.js","redux/selectors.js","components/Button/Button.jsx","components/ContactsList/ContactsList.jsx","components/ContactsFilter/ContactsFilter.jsx","components/ContactForm/ContactForm.jsx","components/Modal/Modal.jsx","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","fetchContacts","dispatch","a","get","data","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","text","name","includes","getFilteredContacts","Button","onClick","className","value","type","ContactsList","useDispatch","useEffect","useSelector","handleDeleteContact","id","delete","deleteContact","map","number","st","listItem","btn","ContactsFilter","label","input","onChange","event","target","ContactForm","onClose","useState","contactName","setContactName","contactNumber","setContactNumber","nameId","shortid","generate","contactPhoneNumberId","useForm","register","handleSubmit","handleFormChange","resetForm","onSubmit","find","contact","toast","error","post","form","htmlFor","ref","modalRoot","document","querySelector","Modal","children","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","Overlay","currentTarget","modal","App","showModal","setShowModal","visibleContacts","togleModal","container","title","subtitle","length","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","createReducer","_","payload","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactReducer","devTools","process","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3ab505f2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactsForm_form__31YwQ\",\"label\":\"ContactsForm_label__1rLX_\",\"input\":\"ContactsForm_input__3HKjT\",\"btn\":\"ContactsForm_btn__3vmeW\",\"error\":\"ContactsForm_error__1tKzs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactsList_listItem__1r6vE\",\"name\":\"ContactsList_name__1295c\",\"number\":\"ContactsList_number__2rFRF\",\"btn\":\"ContactsList_btn__3_ya6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__fCLbN\",\"title\":\"App_title__2o9DX\",\"subtitle\":\"App_subtitle__2q_eK\",\"btn\":\"App_btn__3LZyV\",\"bth\":\"App_bth__McOdd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactsFilter_label__3gILJ\",\"input\":\"ContactsFilter_input__X-5eJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3JPnA\",\"modal\":\"Modal_modal__2L3iQ\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSuccess',\r\n);\r\n\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\n\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\n\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\n\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\n\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","import axios from 'axios';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './action';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nexport const fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n    return dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error));\r\n  }\r\n};\r\nexport const addContact = (name, number) => async dispatch => {\r\n  const contact = { name, number };\r\n  dispatch(addContactRequest());\r\n  try {\r\n    const { data } = await axios.post('/contacts', contact);\r\n    return dispatch(addContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(addContactError(error));\r\n  }\r\n};\r\n\r\nexport const deleteContact = id => async dispatch => {\r\n  dispatch(deleteContactRequest());\r\n  try {\r\n    await axios.delete(`/contacts/${id}`);\r\n    return dispatch(deleteContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(deleteContactError(error));\r\n  }\r\n};\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = state => state.contacts.items;\r\n\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const getFilteredContacts = contacts => {\r\n      const normalizedFilter = filter.toLowerCase();\r\n      return contacts.filter(text =>\r\n        text.name.toLowerCase().includes(normalizedFilter),\r\n      );\r\n    };\r\n    return getFilteredContacts(contacts);\r\n  },\r\n);\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Button = ({ onClick, className, value, type }) => {\r\n  return (\r\n    <button onClick={onClick} className={className} type={type}>\r\n      {value}\r\n    </button>\r\n  );\r\n};\r\nButton.propTypes = {\r\n  onclick: PropTypes.func,\r\n  className: PropTypes.string,\r\n  value: PropTypes.string,\r\n  type: PropTypes.string,\r\n};\r\n\r\nexport default Button;\r\n","import PropTypes from 'prop-types';\r\nimport { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchContacts, deleteContact } from '../../redux/operations';\r\nimport { getVisibleContacts } from '../../redux/selectors';\r\nimport Button from '../Button';\r\nimport st from './ContactsList.module.css';\r\n\r\nconst ContactsList = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n  const contacts = useSelector(getVisibleContacts);\r\n\r\n  const handleDeleteContact = id => dispatch(deleteContact(id));\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={st.listItem}>\r\n          <span className={st.name}>{name}:</span>\r\n          <span className={st.number}>{number}</span>\r\n          <Button\r\n            type=\"button\"\r\n            className={st.btn}\r\n            onClick={() => handleDeleteContact(id)}\r\n            value=\"Delete\"\r\n          />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\n\r\nexport default ContactsList;\r\n","import PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { changeFilter } from '../../redux/action';\r\nimport { getFilter } from '../../redux/selectors';\r\nimport st from './ContactsFilter.module.css';\r\n\r\nconst ContactsFilter = () => {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <label className={st.label}>\r\n      Find contact\r\n      <input\r\n        className={st.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={event => dispatch(changeFilter(event.target.value))}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nContactsFilter.propTypes = {\r\n  value: PropTypes.string,\r\n};\r\n\r\nexport default ContactsFilter;\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addContact } from '../../redux/operations';\r\nimport { getContacts } from '../../redux/selectors';\r\nimport Button from '../Button';\r\nimport st from './ContactsForm.module.css';\r\nimport { toast } from 'react-toastify';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nconst ContactForm = ({ onClose }) => {\r\n  const [contactName, setContactName] = useState('');\r\n  const [contactNumber, setContactNumber] = useState('');\r\n  const nameId = shortid.generate();\r\n  const contactPhoneNumberId = shortid.generate();\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getContacts);\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  const handleFormChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setContactName(value);\r\n        break;\r\n      case 'number':\r\n        setContactNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  const handleFormSubmit = () => {\r\n    if (contactName === '') {\r\n      toast.error('Enter contact name');\r\n      return;\r\n    }\r\n    if (contactNumber === '') {\r\n      toast.error('Enter contact number');\r\n      return;\r\n    }\r\n    if (contacts.find(contact => contact.name === contactName)) {\r\n      toast.error(`${contactName} is already exists`);\r\n      resetForm();\r\n      return;\r\n    }\r\n    dispatch(addContact(contactName, contactNumber));\r\n    resetForm();\r\n    onClose();\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setContactName('');\r\n    setContactNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(handleFormSubmit)} className={st.form}>\r\n      <label htmlFor={nameId} className={st.label}>\r\n        Name\r\n        <input\r\n          ref={register}\r\n          className={st.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={contactName}\r\n          onChange={handleFormChange}\r\n          id={nameId}\r\n        />\r\n      </label>\r\n      <label htmlFor={contactPhoneNumberId} className={st.label}>\r\n        Phone Number\r\n        <input\r\n          ref={register}\r\n          className={st.input}\r\n          type=\"text\"\r\n          name=\"number\"\r\n          value={contactNumber}\r\n          onChange={handleFormChange}\r\n          id={contactPhoneNumberId}\r\n        />\r\n      </label>\r\n      <Button type=\"submit\" className={st.btn} value=\"Create contact\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nContactForm.propTypes = {\r\n  onClose: PropTypes.func,\r\n};\r\n\r\nexport default ContactForm;\r\n","import { createPortal } from 'react-dom';\r\nimport { useEffect } from 'react';\r\nimport st from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nconst Modal = ({ onClose, children }) => {\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  });\r\n\r\n  const handleKeyDown = event => {\r\n    if (event.code === 'Escape') {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const handleBackdropClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className={st.Overlay} onClick={handleBackdropClick}>\r\n      <div className={st.modal}>{children}</div>\r\n    </div>,\r\n    modalRoot,\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import ContactsList from './components/ContactsList';\nimport ContactsFilter from './components/ContactsFilter';\nimport ContactForm from './components/ContactForm';\nimport { ToastContainer } from 'react-toastify';\nimport { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts, getVisibleContacts } from './redux/selectors';\nimport { fetchContacts } from './redux/operations';\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport Button from './components/Button';\nimport Modal from './components/Modal';\nimport st from './App.module.css';\n\nfunction App() {\n  const [showModal, setShowModal] = useState(false);\n  const contacts = useSelector(getContacts);\n  const visibleContacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  const togleModal = () => setShowModal(!showModal);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={st.container}>\n      <h1 className={st.title}>PHONEBOOK</h1>\n      <Button onClick={togleModal} className={st.btn} value=\"Add  contact\" />\n      {showModal && (\n        <Modal onClose={togleModal}>\n          <ContactForm onClose={togleModal} />\n        </Modal>\n      )}\n      <h2 className={st.subtitle}>Contacts</h2>\n      {contacts.length > 1 && <ContactsFilter />}\n      {visibleContacts.length > 0 && <ContactsList />}\n      <ToastContainer\n        position=\"top-center\"\n        autoClose={3000}\n        hideProgressBar={true}\n        newestOnTop={false}\n        closeOnClick={true}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchContactsSuccess,\r\n  addContactSuccess,\r\n  deleteContactSuccess,\r\n  changeFilter,\r\n} from './action';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({ items, filter });\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport logger from 'redux-logger';\r\nimport contactReducer from './reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport './base.css';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}